{"version":3,"sources":["aui-ng.js","an-dropdown2/an-dropdown2.directive.js","date-picker/an-date-picker.directive.js","dialog/an-confirm-dialog.factory.js","dialog/an-dialog-utils.factory.js","dialog/an-dialog.factory.js","dialog/an-message-dialog.factory.js","dialog/an-simple-dialog.factory.js","messages/an-message.directive.js","messages/an-messages-container.directive.js","messages/an-messages.factory.js","page/an-page.directive.js","page/an-pages-manager.factory.js","page/an-pages.directive.js","page/an-panel.directive.js","select2/an-select2.directive.js","tooltip/an-tooltip.directive.js"],"names":[],"mappings":"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","file":"aui-ng.min.js","sourcesContent":["angular.module('k15t.auiNg', ['ngSanitize']);\n",";(function (angular) {\n\n  'use strict';\n\n  var TAB_KEY =  9;\n  var ESCAPE_KEY = 27;\n  var UP_KEY = 38;\n  var DOWN_KEY = 40;\n\n  angular.module('k15t.auiNg')\n    .directive('anDropdown2', function () {\n        return {\n          link: function (scope, $elm, attrs) {\n            // ui status\n            var isOpened = false;\n            var isTriggerButtonFocused = false;\n\n            // attributes\n            var dropdownId = attrs.anDropdown2;\n            var align = attrs.anDropdown2Align;\n\n            // elements\n            var $dropdown, $items;\n            var selectedItem = null;\n\n            $elm\n              .on('click', toggleHandler)\n              .on('focus', focusHandler)\n              .on('blur', blurHandler);\n\n            function toggleHandler (e) {\n              selectedItem = null;\n              toggleDropdown();\n            }\n\n            function focusHandler () {\n              isTriggerButtonFocused = true;\n            }\n\n            function blurHandler () {\n              isTriggerButtonFocused = false;\n            }\n\n            angular.element(document)\n              .on('click', cancelHandler)\n              .on('keydown', keyboardHandler);\n\n            function cancelHandler (evt) {\n              if (!$elm[0].contains(evt.target) && isOpened) {\n                hideDropdown();\n              }\n            }\n\n            function keyboardHandler (evt) {\n              if (isOpened && (evt.keyCode === ESCAPE_KEY || evt.keyCode === TAB_KEY)) {\n                hideDropdown();\n\n              } else if (isTriggerButtonFocused && (selectedItem === null  || isOpened === false)) {\n                if (evt.keyCode === DOWN_KEY ||  evt.keyCode === UP_KEY) {\n                  evt.preventDefault();\n                  showDropdown();\n                  selectItem(0);\n                }\n\n              } else if (isOpened) {\n                switch (evt.keyCode) {\n                  case UP_KEY:\n                    evt.preventDefault();\n                    selectItem(selectedItem  - 1);\n                    break;\n\n                  case DOWN_KEY:\n                    evt.preventDefault();\n                    selectItem(selectedItem + 1);\n                    break;\n                }\n              }\n            }\n\n            function selectItem (i) {\n              selectedItem = i % $items.length;\n              $items.get(selectedItem).focus();\n            }\n\n            function toggleDropdown () {\n              isOpened = !isOpened;\n              if (isOpened) {\n                initDropdown();\n              }\n              $dropdown.toggleClass('an-dropdown2-show');\n            }\n\n            function showDropdown () {\n              isOpened = true;\n              initDropdown();\n              $dropdown.addClass('an-dropdown2-show');\n            }\n\n            function hideDropdown () {\n              isOpened = false;\n              $dropdown.removeClass('an-dropdown2-show');\n            }\n\n            function initDropdown () {\n              var offset;\n\n              $dropdown = angular.element('#' + dropdownId);\n\n              if ($dropdown.length === 0) {\n                console.error('dropdown2 trigger can\\'t find menu with the id \"' + dropdownId + '\"');\n\n              } else {\n                $dropdown.appendTo(document.body);\n                $items = $dropdown.find('a');\n\n                offset = $elm.offset();\n                $dropdown.css({\n                  top: offset.top + $elm.outerHeight() - 1,\n                  left: align === 'left' ? offset.left : offset.left - $dropdown.outerWidth() + $elm.outerWidth()\n                });\n              }\n            }\n\n            $elm.on('$destroy', function () {\n              $elm\n                .off('click', toggleHandler)\n                .off('focus', focusHandler)\n                .off('blur', blurHandler);\n\n              if ($dropdown) {\n                $dropdown.remove();\n              }\n\n              angular.element(document)\n                .off('click', cancelHandler)\n                .off('keydown', keyboardHandler);\n            });\n          }\n        };\n      }\n    );\n\n})(angular);",";(function(angular) {\n\n    'use strict';\n\n    /**\n     * Directive which wraps the jquery date picker for more details about the different options please\n     * see http://api.jqueryui.com/datepicker.\n     *\n     * Additionally the following callback handler can be defined:\n     * - onChange: will be called if the user leaving the input field. The date as string and the date will be provided to the handler.\n     * - onSelect: will be called if the user opened the date picker and selected a day. The date as string and the date will be\n     *             provided to the handler.\n     */\n    angular.module('k15t.auiNg')\n        .directive('anDatePicker', function() {\n            return {\n                restrict: 'A',\n                link: function(scope, elm, attrs) {\n                    var options = scope.$eval(attrs.anDatePicker) || {};\n                    if (options.onChange) {\n                        elm.live(\"blur\", function() {\n                            options.onChange(elm.datepicker(\"option\", \"currentText\"), elm.datepicker(\"getDate\"));\n                        });\n                    }\n                    if (options.onSelect) {\n                        var onSelectOrg = options.onSelect;\n                        options.onSelect = function() {\n                            onSelectOrg(elm.datepicker(\"option\", \"currentText\"), elm.datepicker(\"getDate\"));\n                        }\n                    }\n                    elm.datepicker(options);\n                }\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg').\n        factory('anConfirmDialog',\n            function(anSimpleDialog, anDialogUtils) {\n\n                var defaults = {\n                    controller: ['$scope', 'dialog', function($scope, dialog) {\n                        $scope.$submit = function() {\n                            dialog.close(true);\n                        };\n                    }],\n                    locals: {\n                        styles: {\n                            dialog: {\n                                width: '400px'\n                            }\n                        }\n                    }\n                };\n\n                var create = function(opts) {\n                    return anSimpleDialog.create(anDialogUtils.extendOptions(defaults, opts));\n                };\n\n                return {\n                    create: create\n                };\n            }\n    );\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .factory('anDialogUtils', function() {\n\n            var extendLocals = function(defaultLocals, optsLocals) {\n                defaultLocals = defaultLocals || {};\n                optsLocals = optsLocals || {};\n\n                var locals = angular.extend({}, defaultLocals, optsLocals);\n                locals.labels = angular.extend({}, defaultLocals.labels || {}, optsLocals.labels || {});\n                locals.classes = angular.extend({}, defaultLocals.classes || {}, optsLocals.classes || {});\n                locals.styles = angular.extend({}, defaultLocals.styles || {}, optsLocals.styles || {});\n\n                return locals;\n            };\n\n            var extendOptions = function() {\n                var target = {};\n                var args = [].slice.call(arguments, 0);\n\n                args.forEach(function(arg) {\n                    arg = arg || {};\n                    target = angular.extend({}, target, arg, {locals: extendLocals(target.locals, arg.locals)})\n                });\n\n                return target;\n            };\n\n            return {\n                extendOptions: extendOptions\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .factory('anDialog',\n            function($animate, $compile, $rootScope, $controller, $q, $http, $templateCache, anDialogUtils, AN_DIALOG_EXTEND_OPTIONS) {\n                var stack = [];\n                var startZindex = 3000;\n                var focusableElements = 'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]';\n                var $body = angular.element('body');\n                var orgOverflow = $body.css('overflow');\n\n                var defaultTemplate = [\n                    '<div class=\"an-dialog-wrapper\" ng-class=\"{\\'an-dialog-loading\\': $isLoading, \\'an-dialog-loaded\\': !$isLoading }\" tabindex=\"-1\">',\n                    '   <div class=\"an-dialog-wrapper-inner\">',\n                    '       <div class=\"an-dialog {{ classes.dialog }}\" ng-style=\"styles.dialog\">',\n                    '           <div class=\"an-dialog-components\">',\n                    '               <div ng-bind-html=\"content\"></div>',\n                    '           </div>',\n                    '       </div>',\n                    '   </div>',\n                    '</div>'\n                ].join('\\n');\n\n                var getBlanket = function() {\n                    return $body.find('.an-dialog-blanket');\n                };\n\n                var onKeyDown = function(ev) {\n                    if (stack.length && stack[stack.length - 1].options.closeOnEscape && ev.keyCode === 27) {\n                        stack[stack.length - 1].scope.$close();\n                    }\n                };\n\n                var onBlanketClick = function(ev) {\n                    if (stack.length && stack[stack.length - 1].options.closeOnBlanketClick &&\n                        angular.element(ev.target).hasClass('an-dialog-wrapper-inner')) {\n                        stack[stack.length - 1].scope.$close();\n                    }\n                };\n\n                var onFocusIn = function (ev) {\n                    var modalElement = $body.find('.an-dialog-wrapper')[0];\n                    var target = ev.target;\n\n                    if (!stack.length) {\n                        return;\n                    }\n\n                    // In case the target element belongs to select2, dont't do anything.\n                    // Select2 injects the options list into the html body, so it is outside of the modal,\n                    // even if the select2 itself is used inside the modal.\n                    if (angular.element.fn && angular.element.fn.closest &&\n                        angular.element(target).closest('.select2-drop').length) {\n                        return;\n                    }\n\n                    if (!modalElement.contains(target)) {\n                        angular.element(modalElement).find(focusableElements).filter(':visible')[0].focus();\n                    }\n                };\n\n                var addDialogToStack = function(dialog) {\n                    if (!stack.length) {\n                        $body.append('<div class=\"an-dialog-blanket\"></div>');\n                        $body.css('overflow', 'hidden');\n                        $body.on('click', onBlanketClick);\n                        $body.on('focusin', onFocusIn);\n                        document.addEventListener('keydown', onKeyDown);\n                    }\n                    stack.push(dialog);\n                    getBlanket().css('z-index', startZindex + ((stack.length * 2) - 1));\n                };\n\n                var popDialogFromStack = function() {\n                    if (!stack.length) {\n                        return;\n                    }\n\n                    stack.pop();\n                    getBlanket().css('z-index', startZindex + ((stack.length * 2) - 1));\n\n                    if (!stack.length) {\n                        $body.off('click', onBlanketClick);\n                        $body.off('focusin', onFocusIn);\n                        getBlanket().remove();\n                        $body.css('overflow', orgOverflow);\n                        document.removeEventListener('keydown', onKeyDown);\n                    }\n                };\n\n                var getTemplate = function(template) {\n                    if (typeof template === 'function') {\n                        return $q.resolve(template());\n                    }\n                    return $http.get(template, {\n                        cache: $templateCache\n                    }).then(function(response) {\n                        return response.data;\n                    });\n                };\n\n                // this code is highly inspired by https://github.com/btford/angular-modal\n                var create = function(opts) {\n                    var defaults = {\n                        width: 640,\n                        height: 480,\n                        template: function() {\n                            return $q.when(defaultTemplate);\n                        },\n                        contentTemplate: null,\n                        controller: null,\n                        controllerAs: 'dialogCtrl',\n                        closeOnEscape: true,\n                        closeOnBlanketClick: false,\n                        onOpen: angular.noop,\n                        onClose: angular.noop,\n                        promises: [],\n                        locals: {}\n                    };\n\n                    var options = anDialogUtils.extendOptions(defaults, AN_DIALOG_EXTEND_OPTIONS || {}, opts);\n                    var scope;\n                    var element;\n\n                    var open = function() {\n                        return getTemplate(options.template).then(function(wrapperContent) {\n                            if (!options.contentTemplate) {\n                                return wrapperContent;\n                            }\n                            return getTemplate(options.contentTemplate).then(function(content) {\n                                var wrapperEl = angular.element(wrapperContent);\n                                wrapperEl.find('[ng-bind-html=\"content\"]').removeAttr('ng-bind-html').html(content);\n                                return wrapperEl.get(0).outerHTML;\n                            });\n                        }).then(attach);\n                    };\n\n                    var attach = function(html) {\n                        element = angular.element(html);\n                        if (element.length === 0) {\n                            throw new Error('The template contains no elements; you need to wrap text nodes');\n                        }\n                        scope = options.scope ? options.scope.$new() : $rootScope.$new();\n                        dialog.scope = scope;\n\n                        angular.extend(scope, options.locals, {\n                            $close: close,\n                            $submit: close,\n                            $disableSubmit: angular.noop,\n                            $isLoading: true,\n                            dialog: dialog\n                        });\n\n                        if (options.controller) {\n                            var deps = {\n                                dialog: dialog,\n                                $scope: scope\n                            };\n                            var ctrl = $controller(options.controller, deps);\n                            if (options.controllerAs) {\n                                scope[options.controllerAs] = ctrl;\n                            }\n                        }\n\n                        return $q.all(options.promises).then(function() {\n                            addDialogToStack(dialog);\n\n                            $compile(element)(scope);\n\n                            element.css('z-index', startZindex + stack.length * 2);\n                            return $animate.enter(element, $body).then(function() {\n                                scope.$isLoading = false;\n                                element.focus();\n                            });\n                        });\n                    };\n\n                    var close = function() {\n                        var args = arguments;\n                        if (!element) {\n                            return $q.when();\n                        }\n                        return $animate.leave(element).then(function() {\n                            scope.$emit('$close', args);\n                            scope.$destroy();\n                            scope = null;\n                            element.remove();\n                            element = null;\n                            popDialogFromStack();\n                            options.onClose.apply(null, args);\n                        });\n                    };\n\n                    var waitFor = function(promise) {\n                        options.promises.push(promise);\n                    };\n\n                    var dialog = {\n                        close: close,\n                        options: options,\n                        waitFor: waitFor,\n                        openPromise: null\n                    };\n\n                    dialog.openPromise = open().then(function() {\n                        options.onOpen(dialog);\n                        return dialog;\n                    });\n\n                    return dialog;\n                };\n\n                return {\n                    create: create\n                };\n            }\n    );\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg').\n        factory('anMessageDialog',\n            function(anSimpleDialog, $q, anDialogUtils) {\n\n                // jscs:disable\n                var defaultTemplate = [\n                    '<div class=\"an-dialog-wrapper\" ng-class=\"{\\'an-dialog-loading\\': $isLoading, \\'an-dialog-loaded\\': !$isLoading }\">',\n                    '   <div class=\"an-dialog-wrapper-inner\">',\n                    '       <div class=\"an-dialog {{ classes.dialog }}\" ng-style=\"styles.dialog\">',\n                    '           <div class=\"an-dialog-components\">',\n                    '               <header class=\"an-dialog-header {{ classes.header }}\" ng-style=\"styles.header\">',\n                    '                   <h2 class=\"an-dialog-header-title {{ classes.title }}\" ng-style=\"styles.title\">{{ labels.title }}</h2>',\n                    '                   <a class=\"an-dialog-header-close {{ classes.closes }}\" ng-style=\"styles.close\" ng-click=\"$close()\"><span class=\"aui-icon aui-icon-small aui-iconfont-close-dialog\">{{ labels.cancel }}</span></a>',\n                    '               </header>',\n                    '               <section class=\"an-dialog-content {{ classes.content }}\" ng-style=\"styles.content\">',\n                    '                   <div an-message=\"message\"></div>',\n                    '               </section>',\n                    '               <footer class=\"an-dialog-footer\">',\n                    '                   <div class=\"an-dialog-footer-actions\">',\n                    '                       <button class=\"aui-button aui-button-link {{ classes.cancel }}\" ng-style=\"styles.cancel\" ng-click=\"$close()\">{{ labels.cancel }}</button>',\n                    '                   </div>',\n                    '               </footer>',\n                    '           </div>',\n                    '       </div>',\n                    '   </div>',\n                    '</div>'\n                ].join('\\n');\n                // jscs:enable\n\n\n                var defaults = {\n                    template: function() {\n                        return $q.when(defaultTemplate);\n                    },\n                    controller: ['$scope', 'dialog', function($scope, dialog) {\n                        $scope.$submit = function() {\n                            dialog.close(true);\n                        };\n                    }],\n                    locals: {\n                        styles: {\n                            content: {\n                                padding: '20px'\n                            }\n                        }\n                    }\n                };\n\n                var create = function(message, opts) {\n                    return anSimpleDialog.create(anDialogUtils.extendOptions(defaults, {\n                        locals: {\n                            labels: {\n                                cancel: 'Close'\n                            },\n                            message: message\n                        }\n                    }, opts));\n                };\n\n                return {\n                    create: create\n                };\n            }\n    );\n})(angular);\n",";(function(angular) {\n    'use strict';\n\n    angular.module('k15t.auiNg').\n        factory('anSimpleDialog',\n            function(anDialog, $q, anDialogUtils) {\n\n                // jscs:disable\n                var defaultTemplate = [\n                    '<div class=\"an-dialog-wrapper\" ng-class=\"{\\'an-dialog-loading\\': $isLoading, \\'an-dialog-loaded\\': !$isLoading }\">',\n                    '   <div class=\"an-dialog-wrapper-inner\">',\n                    '       <div class=\"an-dialog {{ classes.dialog }}\" ng-style=\"styles.dialog\">',\n                    '           <div class=\"an-dialog-components\">',\n                    '               <header class=\"an-dialog-header {{ classes.header }}\" ng-style=\"styles.header\">',\n                    '                   <h2 class=\"an-dialog-header-title {{ classes.title }}\" ng-style=\"styles.title\">{{ labels.title }}</h2>',\n                    '                   <a class=\"an-dialog-header-close {{ classes.closes }}\" ng-style=\"styles.close\" ng-click=\"$close()\"><span class=\"aui-icon aui-icon-small aui-iconfont-close-dialog\">{{ labels.cancel }}</span></a>',\n                    '               </header>',\n                    '               <section class=\"an-dialog-content {{ classes.content }}\" ng-style=\"styles.content\" ng-bind-html=\"content\"></section>',\n                    '               <footer class=\"an-dialog-footer\">',\n                    '                   <div class=\"an-dialog-footer-actions\">',\n                    '                       <button class=\"aui-button aui-button-primary {{ classes.submit }}\" ng-style=\"styles.submit\" ng-disabled=\"$disableSubmit()\" ng-click=\"$submit()\">{{ labels.submit }}</button>',\n                    '                       <button class=\"aui-button aui-button-link {{ classes.cancel }}\" ng-style=\"styles.cancel\" ng-click=\"$close()\">{{ labels.cancel }}</button>',\n                    '                   </div>',\n                    '               </footer>',\n                    '           </div>',\n                    '       </div>',\n                    '   </div>',\n                    '</div>'\n                ].join('\\n');\n                // jscs:enable\n\n                var defaults = {\n                    template: function() {\n                        return $q.when(defaultTemplate);\n                    },\n                    locals: {\n                        labels: {\n                            submit: 'Submit',\n                            cancel: 'Cancel'\n                        },\n                        classes: {},\n                        styles: {}\n                    }\n                };\n\n                var create = function(opts) {\n                    return anDialog.create(anDialogUtils.extendOptions(defaults, opts));\n                };\n\n                return {\n                    create: create\n                };\n            }\n    );\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .directive('anMessage', function() {\n\n            // jscs:disable\n            var defaultTemplate = [\n                '<div ng-style=\"message.styleContainer\" class=\"aui-message aui-message-{{ message.severity }} {{ message.severity }}\">',\n                '   <p ng-if=\"message.title\" class=\"title\">',\n                '       <span class=\"aui-icon icon-{{ message.severity }}\"></span>',\n                '       <strong ng-bind=\"message.title\"></strong>',\n                '   </p>',\n                '   <div ng-style=\"message.styleMessageWrapper\">',\n                '       <p ng-if=\"message.message\" ng-bind-html=\"message.message\"></p>',\n                '       <pre ng-if=\"message.details\" ng-style=\"message.styleDetails\" ng-bind-html=\"message.details\"></pre>',\n                '   </div>',\n                '</div>'\n            ].join('\\n');\n            // jscs:enable\n\n            return {\n                restrict: 'A',\n                scope: {\n                    message: '=anMessage'\n                },\n                template: defaultTemplate\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .directive('anMessagesContainer', function(anMessages) {\n\n            // jscs:disable\n            var defaultTemplate = [\n                '<div class=\"aui-messages an-messages-container\">',\n                '   <div ng-repeat=\"message in messagesCtrl.messages\" an-message=\"message\"></div>',\n                '</div>'\n            ].join('\\n');\n            // jscs:enable\n\n            return {\n                restrict: 'A',\n                scope: {},\n                require: 'anMessagesContainer',\n                controllerAs: 'messagesCtrl',\n                template: defaultTemplate,\n                controller: function() {\n                    var that = this;\n\n                    var uniqueId = (function() {\n                        var id = 0;\n                        return function() {\n                            return id++;\n                        };\n                    })();\n\n                    this.messages = [];\n\n                    var defaults = {\n                        severity: 'info',\n                        title: null,\n                        message: null\n                    };\n\n                    this.addMessage = function(opts) {\n                        var id = uniqueId();\n                        that.messages.push(angular.extend({$id: id}, defaults, opts));\n\n                        return function() {\n                            for (var i = 0, len = that.messages.length; i < len; i++) {\n                                if (that.messages[i].$id === id) {\n                                    that.messages = that.messages.splice(i, 1);\n                                    break;\n                                }\n                            }\n                        };\n                    };\n\n                    this.clearMessages = function() {\n                        that.messages.length = 0;\n                    };\n                },\n                link: function(scope, elm, attrs, ctrl) {\n                    var id = attrs.anMessagesContainer;\n\n                    if (!id) {\n                        throw new Error('container id missing');\n                    }\n\n                    var unregister = anMessages.register(id, ctrl);\n\n                    scope.$on('$destroy', unregister);\n                }\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .factory('anMessages', function() {\n            var containers = {};\n\n            var register = function(id, ctrl) {\n                if (containers[id]) {\n                    throw new Error('a container with this id already exists');\n                }\n\n                containers[id] = ctrl;\n\n                return function() {\n                    delete containers[id];\n                };\n            };\n\n            var clearMessages = function(id) {\n                if (!containers[id]) {\n                    throw new Error('a container with id ' + id + ' does not exist');\n                }\n\n                containers[id].clearMessages();\n            };\n\n            var addMessage = function(id, opts) {\n                if (!containers[id]) {\n                    throw new Error('a container with id ' + id + ' does not exist');\n                }\n\n                return containers[id].addMessage(opts);\n            };\n\n            return {\n                register: register,\n                clearMessages: clearMessages,\n                addMessage: addMessage\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .directive('anPage', function() {\n            return {\n                restrict: 'A',\n                require: ['^anPages', 'anPage'],\n                scope: true,\n                priority: 99,\n                controller: function($scope, $animate) {\n                    var that = this;\n                    var panels = [];\n                    var currentPanelIdx = 0;\n\n                    var uniqueId = (function() {\n                        var id = 0;\n                        return function() {\n                            return id++;\n                        };\n                    })();\n\n                    var normalizeIdx = function(idxAlias) {\n                        if (typeof idxAlias === 'number') {\n                            if (!panels[idxAlias]) {\n                                return false;\n                            }\n                            return idxAlias;\n                        }\n\n                        for (var i = 0, len = panels.length; i < len; i++) {\n                            if (panels[i].alias === idxAlias) {\n                                return i;\n                            }\n                        }\n\n                        return false;\n                    };\n\n                    this.addPanel = function(panel) {\n                        panel.$id = uniqueId();\n                        panels.push(panel);\n\n                        $animate.addClass(panel.el, 'ng-hide');\n\n                        // remove the panel by calling this function;\n                        return function() {\n                            for (var i = 0, len = panels.length; i < len; i++) {\n                                if (panels[i].$id === panel.$id) {\n                                    panels = panels.splice(i, 1);\n                                    if (i === currentPanelIdx) {\n                                        that.gotoPanel(0);\n                                    }\n                                    break;\n                                }\n                            }\n                        };\n                    };\n\n                    this.gotoPanel = function(idxAlias) {\n                        var idx = normalizeIdx(idxAlias);\n\n                        if (idx === false) {\n                            currentPanelIdx = 0;\n                            return false;\n                        }\n\n                        $animate.addClass(panels[currentPanelIdx].el, 'ng-hide');\n                        $animate.removeClass(panels[idx].el, 'ng-hide');\n\n                        currentPanelIdx = idx;\n                        return true;\n                    };\n\n                    this.hasNextPanel = function() {\n                        return (currentPanelIdx + 1) < panels.length;\n                    };\n\n                    this.hasPrevPanel = function() {\n                        return currentPanelIdx > 0;\n                    };\n\n                    this.nextPanel = function() {\n                        return that.gotoPanel(currentPanelIdx + 1);\n                    };\n\n                    this.prevPanel = function() {\n                        return that.gotoPanel(currentPanelIdx - 1);\n                    };\n\n                    $scope.$gotoPanel = this.gotoPanel;\n                    $scope.$hasNextPanel = this.hasNextPanel;\n                    $scope.$hasPrevPanel = this.hasPrevPanel;\n                    $scope.$nextPanel = this.nextPanel;\n                    $scope.$prevPanel = this.prevPanel;\n                    $scope.$currentPanelIdx = function() {\n                        return currentPanelIdx;\n                    };\n                },\n                link: function(scope, elm, attrs, ctrls) {\n                    var anPages = ctrls[0];\n                    var anPage = ctrls[1];\n                    var page = {\n                        el: elm,\n                        ctrl: anPage\n                    };\n                    if (attrs.anPage) {\n                        page.alias = attrs.anPage;\n                    }\n                    var removePage = anPages.addPage(page);\n                    anPage.gotoPanel(0);\n                    scope.$on('$destroy', removePage);\n                }\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .factory('anPagesManager', function() {\n            var pages = {};\n\n            var register = function(id, ctrl) {\n                if (pages[id]) {\n                    throw new Error('id already exists');\n                }\n\n                pages[id] = ctrl;\n\n                return function() {\n                    delete pages[id];\n                };\n            };\n\n            var getById = function(id) {\n                if (!pages[id]) {\n                    throw new Error(id + ' does not exist');\n                }\n\n                return pages[id];\n            };\n\n            return {\n                register: register,\n                getById: getById\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .directive('anPages', function(anPagesManager) {\n            return {\n                scope: true,\n                restrict: 'A',\n                priority: 100,\n                require: 'anPages',\n                controller: function($scope, $animate) {\n                    var that = this;\n                    var pages = [];\n                    var currentPageIdx = 0;\n\n                    var uniqueId = (function() {\n                        var id = 0;\n                        return function() {\n                            return id++;\n                        };\n                    })();\n\n                    var normalizeIdx = function(idxAlias) {\n                        if (typeof idxAlias === 'number') {\n                            if (!pages[idxAlias]) {\n                                return false;\n                            }\n                            return idxAlias;\n                        }\n\n                        for (var i = 0, len = pages.length; i < len; i++) {\n                            if (pages[i].alias === idxAlias) {\n                                return i;\n                            }\n                        }\n\n                        return false;\n                    };\n\n                    this.addPage = function(page) {\n                        page.$id = uniqueId();\n                        pages.push(page);\n\n                        $animate.addClass(page.el, 'ng-hide');\n\n                        // remove the page by calling this function;\n                        return function() {\n                            for (var i = 0, len = pages.length; i < len; i++) {\n                                if (pages[i].$id === page.$id) {\n                                    pages = pages.splice(i, 1);\n                                    if (i === currentPageIdx) {\n                                        that.gotoPage(0);\n                                    }\n                                    break;\n                                }\n                            }\n                        };\n                    };\n\n                    this.gotoPage = function(idxAlias) {\n                        var idx = normalizeIdx(idxAlias);\n\n                        if (idx === false) {\n                            currentPageIdx = 0;\n                            return false;\n                        }\n\n                        $animate.addClass(pages[currentPageIdx].el, 'ng-hide');\n                        $animate.removeClass(pages[idx].el, 'ng-hide');\n\n                        currentPageIdx = idx;\n                        return true;\n                    };\n\n                    this.hasNextPage = function() {\n                        return (currentPageIdx + 1) < pages.length;\n                    };\n\n                    this.hasPrevPage = function() {\n                        return currentPageIdx > 0;\n                    };\n\n                    this.nextPage = function() {\n                        return that.gotoPage(currentPageIdx + 1);\n                    };\n\n                    this.prevPage = function() {\n                        return that.gotoPage(currentPageIdx - 1);\n                    };\n\n                    this.getPage = function(idxAlias) {\n                        var idx = normalizeIdx(idxAlias);\n                        if (!idx) {\n                            return false;\n                        }\n                        return pages[idx];\n                    };\n\n                    $scope.$gotoPage = this.gotoPage;\n                    $scope.$hasNextPage = this.hasNextPage;\n                    $scope.$hasPrevPage = this.hasPrevPage;\n                    $scope.$nextPage = this.nextPage;\n                    $scope.$prevPage = this.prevPage;\n                    $scope.$currentPageIdx = function() {\n                        return currentPageIdx;\n                    };\n                },\n                link: function(scope, element, attrs, anPages) {\n                    var unregister;\n                    anPages.gotoPage(0);\n\n                    if (attrs.anPages) {\n                        unregister = anPagesManager.register(attrs.anPages, anPages);\n                        scope.$on('$destroy', unregister);\n                    }\n                }\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .directive('anPanel', function() {\n            return {\n                restrict: 'A',\n                require: '^anPage',\n                scope: true,\n                priority: 98,\n                link: function(scope, elm, attrs, anPage) {\n                    var panel = {el: elm};\n                    if (attrs.anPanel) {\n                        panel.alias = attrs.anPanel;\n                    }\n                    var removePanel = anPage.addPanel(panel);\n                    scope.$on('$destroy', removePanel);\n                }\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n    \n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .directive('anSelect2', function($timeout) {\n            return {\n                restrict: 'A',\n                require: 'ngModel',\n                link: function(scope, elm, attrs, ctrl) {\n                    var options = scope.$eval(attrs.anSelect2) || {};\n\n                    if (angular.isUndefined(angular.element.fn.auiSelect2)) {\n                        throw new Error('auiSelect2 is not installed');\n                    }\n\n                    if (angular.isFunction(ctrl.$overrideModelOptions)) {\n                        // if selectData is set to true and an-select2 is bound\n                        // to an input field then ng-change is called two times (see #4).\n                        // this is a small workaround which prevents the first ng-change from\n                        // happening.\n                        // notice that this requires angular >= 1.6 in order to work.\n                        ctrl.$overrideModelOptions({\n                            debounce: 5\n                        });\n                    }\n\n                    var onChange = function(e) {\n                        var data = elm.auiSelect2(options.selectData ? 'data' : 'val');\n                        e.stopImmediatePropagation();\n                        if (angular.isArray(data)) {\n                            ctrl.$setViewValue(data.length ? data : void 0);\n                        } else {\n                            ctrl.$setViewValue(data);\n                        }\n                    };\n\n                    elm.on('change', onChange);\n\n                    scope.$on('$destroy', function() {\n                        elm.auiSelect2('destroy');\n                        elm.off('change', onChange);\n                    });\n\n                    // we are using $watch here, instead\n                    // of modelCtrl.$render. $render does not\n                    // get triggered if the value set is an\n                    // object or an array.\n                    scope.$watch(function() {\n                        return ctrl.$modelValue;\n                    }, function(newVal) {\n                        $timeout(function() {\n                            // abort if select2 was already unmounted\n                            if (!elm.data('select2')) {\n                                return;\n                            }\n\n                            var select2Opts = elm.data('select2').opts;\n\n                            if (options.selectData) {\n                                elm.auiSelect2('data', newVal);\n                            } else {\n                                // if a query function is used but initSelection is not set\n                                // then an error will be thrown in the console if we try to\n                                // update the select2 value. that's why we don't support that scenario\n                                // at all atm.\n                                if (select2Opts.query && !select2Opts.initSelection && newVal !== null) {\n                                    console.warn('anSelect2: initSelection should be set if a query function is defined,' +\n                                    ' otherwise it can lead to inconsistities between ngModel and the value which is displayed in select2');\n                                } else {\n                                    elm.auiSelect2('val', newVal);\n                                }\n                            }\n                        });\n                    });\n\n                    $timeout(function() {\n                        elm.auiSelect2(options);\n                    });\n                }\n            };\n        }\n    );\n\n})(angular);\n",";(function(angular) {\n\n    'use strict';\n\n    angular.module('k15t.auiNg')\n        .directive('anTooltip', function() {\n            return {\n                restrict: 'A',\n                link: function(scope, elm, attrs) {\n\n                    var compile = function() {\n                        var options = scope.$eval(attrs.anTooltipOptions) || {};\n\n                        options.title = function() {\n                            return scope.$eval(attrs.anTooltip);\n                        };\n\n                        elm.tooltip(options);\n                    };\n\n                    scope.$watch(attrs.anTooltip, compile);\n\n                    compile();\n                }\n            };\n        }\n    );\n\n})(angular);\n"],"sourceRoot":"/source/"}